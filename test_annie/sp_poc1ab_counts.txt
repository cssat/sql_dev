-- --------------------------------------------------------------------------------
-- Routine DDL
-- Note: comments before and after the routine body will not be stored by the server
-- --------------------------------------------------------------------------------
DELIMITER $$

CREATE DEFINER=`test_annie`@`localhost` PROCEDURE `sp_poc1ab_counts`(p_date  varchar(3000)
,  p_age_grouping_cd varchar(30)
,  p_ethnicity_cd varchar(30)
,  p_gender_cd varchar(10)
,  p_init_cd_plcm_setng varchar(30)
,  p_long_cd_plcm_setng varchar(30) 
,  p_county_cd varchar(200) 
,  p_bin_los_cd varchar(30) 
,  p_bin_placement_cd varchar(30) 
,  p_bin_ihs_svc_cd varchar(30) 
,  p_cd_reporter_type varchar(100) 
,  p_filter_access_type varchar(30) 
,  p_filter_allegation  varchar(30)
, p_filter_finding varchar(30)
, p_filter_service_category  varchar(100)
, p_filter_service_budget varchar(100)
 )
begin


    
declare flg_procedure_off int;
declare intFoundPos integer;

declare strElement varchar(3000);
declare strValues varchar(3000);
declare intVal integer;		
declare intincAll integer;


declare p_qry_id bigint;
declare p_mindate datetime;
declare p_maxdate datetime;
declare p_minmonthstart datetime;
declare p_maxmonthstart datetime;

declare var_qry_cnt int;
declare var_match_unq_qry_id int;
declare x1 float;
declare x2 float;
declare var_row_cnt_param int;
declare var_row_cnt_cache int;

declare age0 char(50);
declare age1 char(50);
declare age2 char(50);
declare age3 char(50);
declare age4 char(50);
declare age5 char(50);
declare age6 char(50);
declare age7 char(50);

declare gdr0 char(10);
declare gdr1 char(10);
declare gdr2 char(10);
declare gdr3 char(10);

declare dep0 char(50);
declare dep1 char(50);
declare dep2 char(50);
declare dep3 char(50);

declare los0 char(50);
declare los1 char(50);
declare los2 char(50);
declare los3 char(50);
declare los4 char(50);
declare los5 char(50);

declare plc0 char(25);
declare plc1 char(25);
declare plc2 char(25);
declare plc3 char(25);
declare plc4 char(25);
declare plc5 char(25);


declare ihs0 char(50);
declare ihs1 char(50);
declare ihs2 char(50);
declare ihs3 char(50);

declare alg0 char(50);
declare alg1 char(50);
declare alg2 char(50);
declare alg3 char(50);
declare alg4 char(50);

declare fnd0 char(50);
declare fnd1 char(50);
declare fnd2 char(50);
declare fnd3 char(50);
declare fnd4 char(50);
declare eth0  char(100) ;
declare eth1  char(100) ;
declare eth2  char(100) ;
declare eth3  char(100) ;
declare eth4  char(100) ;
declare eth5  char(100) ;
declare eth6  char(100) ;
declare eth7  char(100) ;
declare eth8  char(100) ;
declare eth9  char(100) ;
declare eth10 char(100) ;
declare eth11 char(100) ;
declare eth12 char(100) ;



--  DECLARE EXIT HANDLER FOR SQLEXCEPTION ROLLBACK;


set x1=rand();
set x2=rand();

call assign_desc (age0,age1,age2,age3,age4,age5,age6,age7,gdr0,gdr1,gdr2,gdr3,dep0,dep1,dep2,dep3,los0,los1,los2,los3,los4,plc0,plc1,plc2,plc3,plc4,plc5,ihs0,ihs1,ihs2,ihs3,alg0,alg1,alg2,alg3,alg4,fnd0,fnd1,fnd2,fnd3,fnd4,eth0,eth1,eth2,eth3,eth4,eth5,eth6,eth7,eth8,eth9,eth10,eth11,eth12,19);


/***  turn procedure on / off for loading data ***************************************/
set flg_procedure_off =0;
if  flg_procedure_off =0 then    
  
       DROP TEMPORARY TABLE IF EXISTS tbltmpValues;
        create temporary table tbltmpValues (strVal varchar(10));


        DROP TEMPORARY TABLE IF EXISTS tbldt;
        create temporary table tbldt(match_date datetime );
        alter table tbldt add primary key(match_date);
 
    
        --  dates
        set strValues=p_date;
        set 	intFoundPos =instr(strValues,','); 
        while intFoundPos <>0 do
                set strElement=SUBSTRING(strValues, 1, intFoundPos-1); 
                SET strValues = RIGHT(strValues,length(strValues)-intFoundPos);
            
                insert into tbltmpValues (strVal) values (strElement);
                set intFoundPos=instr(strValues,',');
        end while;

        if strValues <> ''  then
                INSERT Into tbltmpValues(strVal) values (strValues);
        end if;
        
        insert into tbldt (match_date)
        select distinct cast(strVal as datetime) from tbltmpValues;
     
     
--  set dates 
    
    select min_date_any ,max_date_all 
    into p_minmonthstart,p_maxmonthstart  
    FROM ref_lookup_max_date where id=19;
    select min(match_date),max(match_date) 
    into p_mindate,p_maxdate from tbldt;
  
    
    if  (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) = '0'  )   then
    --   all zeroes
	         update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=1;
        
                  SELECT  
                            poc1ab.qry_type as   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , ref_age.age_grouping as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , ref_gdr.gender_desc as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , ref_dep.bin_dep_desc as "Dependency"
 --                           , case when poc1ab.bin_dep_cd=0 then 'All episodes'
 --                                  when poc1ab.bin_dep_cd=1 then dep1
 --                                 when poc1ab.bin_dep_cd=2 then dep2
 --                                 when poc1ab.bin_dep_cd=3 then dep3end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , ref_los.bin_los_desc as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , ref_plc.bin_placement_desc as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , ref_ihs.bin_ihs_svc_tx as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_int_param_key poc1ab  
             join ref_lookup_age_census ref_age on ref_age.age_grouping_cd=poc1ab.age_grouping_cd
            join ref_lookup_gender ref_gdr on ref_gdr.pk_gndr=poc1ab.pk_gndr
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
            join ref_filter_dependency ref_dep on ref_dep.bin_dep_cd=poc1ab.bin_dep_cd
            join ref_filter_los ref_los on ref_los.bin_los_cd=poc1ab.bin_los_cd
            join ref_filter_nbr_placement ref_plc on ref_plc.bin_placement_cd=poc1ab.bin_placement_cd
            join ref_filter_ihs_services ref_ihs on ref_ihs.bin_ihs_svc_cd=poc1ab.bin_ihs_svc_cd
            join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
             join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id=1
            and  poc1ab.int_param_key =100000000
            and poc1ab.start_date 
            between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
ELSEIF          (trim(p_bin_placement_cd)='0' 
                        and trim(p_bin_ihs_svc_cd)='0' 
                        and trim(p_cd_reporter_type)='0' 
                        and trim(p_filter_access_type)='0' 
                        and trim(p_filter_allegation)='0' 
                and trim(p_filter_finding)='0' 
                and trim(p_bin_los_cd)='0'
                and trim(p_filter_service_budget) ='0' 
                and trim(p_filter_service_category)='0'
                and trim(p_age_grouping_cd) ='0' 
                and trim(p_gender_cd) ='0'
                and trim(p_ethnicity_cd)<>'0'
                and trim(p_init_cd_plcm_setng)='0' 
                and trim(p_long_cd_plcm_setng)='0' 
                and trim(p_county_cd) = '0'  )    then
  
            call load_ooh_parameters(p_date
        ,  p_age_grouping_cd 
        ,  p_ethnicity_cd 
        ,  p_gender_cd 
        ,  p_init_cd_plcm_setng 
        ,  p_long_cd_plcm_setng 
        ,  p_county_cd 
        ,  p_bin_los_cd 
        ,  p_bin_placement_cd 
        ,  p_bin_ihs_svc_cd 
        ,  p_cd_reporter_type 
        ,  p_filter_access_type 
        ,  p_filter_allegation  
        , p_filter_finding 
        , p_filter_service_category  
        , p_filter_service_budget
        , 0
        , 0
        , p_mindate
        , p_maxdate
        , 19);
        
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=3;
                
        
        SELECT  
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_int_param_key poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc   
   where poc1ab.qry_id in (1,3)
   and poc1ab.int_param_key in (100000000,100100000,100200000,100300000,100400000,100500000,100600000,100800000,100900000,101000000,101100000,101200000) 
            and poc1ab.cd_race in (select distinct cd_race from tbleth)
            and poc1ab.start_date between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) <>'0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) = '0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=2;

 
        SELECT  
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_int_param_key poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,2)
            and poc1ab.int_param_key in (100000000,110000000,120000000,130000000,140000000) 
            and poc1ab.age_grouping_cd in (select distinct age_grouping_cd from tblage)
            and poc1ab.start_date between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
  elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) <>'0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) = '0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=4;

 
         SELECT  
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_int_param_key poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,4)
            and poc1ab.int_param_key in (100000000,100020000,100010000)
            and poc1ab.pk_gndr in (select distinct pk_gndr from tblgdr)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
 elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)<>'0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) = '0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=5;

 
          SELECT  
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_int_param_key poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,5)
            and poc1ab.int_param_key in (100000000,100003000,100006000,100007000,100004000,100005000)
            and poc1ab.init_cd_plcm_setng in (select distinct cd_plcm_setng from tblfpl)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)<>'0' 
            and trim(p_county_cd) = '0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=6;

 
          SELECT  
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_int_param_key poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,6)
            and poc1ab.int_param_key in (100000000,100000300,100000400,100000500,100000600,100000700)
            and poc1ab.long_cd_plcm_setng in (select distinct cd_plcm_setng from tbllpl)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) <>'0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=7;

 
          SELECT  
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_int_param_key poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
           join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,7)
            and poc1ab.int_param_key in
            (	100000000,100000001,100000002,100000003,100000004,100000005,100000006,100000007,100000008,100000009,100000010,
100000011,100000012,100000013,100000014,100000015,100000016,100000017,100000018,100000019,100000020,100000021,100000022,
100000023,100000024,100000025,100000026,100000027,100000028,100000029,100000030,100000031,100000032,100000033,100000034,
100000035,100000036,100000037,100000038,100000039)
            and poc1ab.county_cd in (select distinct cd_cnty from tblcnty)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)<>'0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) ='0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=8;

 
           SELECT  
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_aggr poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,8)
            and poc1ab.int_all_param_key in (100000000000000000000,100000000100000000000,100000000200000000000,100000000300000000000,100000000400000000000)
            and poc1ab.bin_los_cd in (select distinct bin_los_cd from tbllos)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
elseif (trim(p_bin_placement_cd)<>'0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) ='0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=9;

 
           SELECT  
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_aggr poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
           join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,9)
            and poc1ab.int_all_param_key in (100000000000000000000,100000000010000000000,100000000020000000000,100000000030000000000,100000000040000000000,100000000050000000000)
            and poc1ab.bin_placement_cd in (select distinct bin_placement_cd from tblnbrplc)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)<>'0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) ='0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=11;

 
           SELECT  
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                            , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
            FROM cache_poc1ab_aggr poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,11) 
            and poc1ab.int_all_param_key in (100000000000000000000,100000000000050000000,100000000000060000000,100000000000070000000,100000000000080000000,100000000000090000000,100000000000110000000,100000000000120000000,100000000000130000000,100000000000140000000)
            and poc1ab.cd_reporter_type in (select distinct cd_reporter_type from tblrpt)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
            order by   poc1ab.bin_dep_cd 
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)<>'0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) ='0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=15;

           SELECT  
                poc1ab.qry_type   "qry_type_poc1"
                , poc1ab.date_type
                , poc1ab.start_date  as "Month"
                , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                , case poc1ab.age_grouping_cd
                    when 0 then age0
                    when 1 then age1
                    when 2 then age2
                    when 3 then age3
                    when 4 then age4
                  end as "Age Grouping"
                , poc1ab.pk_gndr  as "Gender_Cd"
                , case poc1ab.pk_gndr
                    when 0 then gdr0
                    when 1 then gdr1
                    when 2 then gdr2
                    when 3 then gdr3
                  end as "Gender" 
                , poc1ab.cd_race  as "Ethnicity_Cd"
                , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                , ref_fpl.placement as  "First Placement Setting"
                , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                , ref_lpl.placement as "Longest Placement Setting" 
                , poc1ab.county_cd as "Removal_County_Cd"
                , ref_cnty.county as "County"
                , poc1ab.bin_dep_cd as "Dependency_Cd"
                , case  poc1ab.bin_dep_cd 
                    when 0 then dep0
                    when 1 then dep1
                    when 2 then dep2
                    when 3 then dep3
                end as "Dependency"
                , poc1ab.bin_los_cd 
                , case poc1ab.bin_los_cd 
                    when 0 then los0
                    when 1 then los1
                    when 2 then los2
                    when 3 then los3
                    when 4 then los4 end as "Length of Service Desc"
                , poc1ab.bin_placement_cd
                , case poc1ab.bin_placement_cd
                    when 0 then plc0
                    when 1 then plc1
                    when 2 then plc2
                    when 3 then plc3
                    when 4 then plc4
                    when 5 then plc5
                  end as "Placement Count Desc"
                , poc1ab.bin_ihs_svc_cd
                , case poc1ab.bin_ihs_svc_cd
                    when 0 then ihs0
                    when 1 then ihs1
                    when 2 then ihs2
                    when 3 then ihs3
                  end as "In-Home Service Desc"
                , poc1ab.cd_reporter_type
                , ref_rpt.tx_reporter_type as "Reporter Desc"
                , poc1ab.cd_access_type
                , ref_acc.tx_access_type as "Access type desc"
                , poc1ab.cd_allegation
                , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                , poc1ab.cd_finding
                , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                , ref_srv.tx_subctgry_poc_frc as "Service Type"
                , poc1ab.cd_budget_poc_frc as "Budget Cd"
                , ref_bud.tx_budget_poc_frc as "Budget"
                , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end  as   "Total In Care First Day"
                , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end as "Number of Entries"
                ,  case when ( --  first day + entered care < exited care
                    (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end)
                    +
                    (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end)) >= -- exited care
                        (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                            then 
                                case when (round(cnt_exits + 2 * sqrt(-2 
                                * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                then 1
                                else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                end
                            else cnt_exits
                        end)
                        
                    then -- use exits as they are
                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                            then 
                                case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                * cos(2*pi()*poc1ab.x2),0) ) <1
                                then 1
                                else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                end
                            else cnt_exits
                        end)
                    else -- use first day plus entered
                    (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end)
                    +
                    (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end)
                end as "Number of Exits"
            FROM cache_poc1ab_aggr poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,15)
            and poc1ab.int_all_param_key in (100000000000000000000,100000000000000000100,100000000000000000200,100000000000000000300,100000000000000000400,100000000000000000500,100000000000000000600,100000000000000000700,100000000000000000800
,100000000000000000900,100000000000000001000,100000000000000001100,100000000000000001200,100000000000000001300,100000000000000001400,100000000000000001500,100000000000000001600)
            and poc1ab.cd_subctgry_poc_frc  in (select distinct cd_subctgry_poc_frc from tblsrvc)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
            order by poc1ab.bin_dep_cd
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)<>'0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) ='0'  )   then

    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=14;

           SELECT  
                poc1ab.qry_type   "qry_type_poc1"
                , poc1ab.date_type
                , poc1ab.start_date  as "Month"
                , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                , case poc1ab.age_grouping_cd
                    when 0 then age0
                    when 1 then age1
                    when 2 then age2
                    when 3 then age3
                    when 4 then age4
                  end as "Age Grouping"
                , poc1ab.pk_gndr  as "Gender_Cd"
                , case poc1ab.pk_gndr
                    when 0 then gdr0
                    when 1 then gdr1
                    when 2 then gdr2
                    when 3 then gdr3
                  end as "Gender" 
                , poc1ab.cd_race  as "Ethnicity_Cd"
                , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                , ref_fpl.placement as  "First Placement Setting"
                , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                , ref_lpl.placement as "Longest Placement Setting" 
                , poc1ab.county_cd as "Removal_County_Cd"
                , ref_cnty.county as "County"
                , poc1ab.bin_dep_cd as "Dependency_Cd"
                , case  poc1ab.bin_dep_cd 
                    when 0 then dep0
                    when 1 then dep1
                    when 2 then dep2
                    when 3 then dep3
                end as "Dependency"
                , poc1ab.bin_los_cd 
                , case poc1ab.bin_los_cd 
                    when 0 then los0
                    when 1 then los1
                    when 2 then los2
                    when 3 then los3
                    when 4 then los4 end as "Length of Service Desc"
                , poc1ab.bin_placement_cd
                , case poc1ab.bin_placement_cd
                    when 0 then plc0
                    when 1 then plc1
                    when 2 then plc2
                    when 3 then plc3
                    when 4 then plc4
                    when 5 then plc5
                  end as "Placement Count Desc"
                , poc1ab.bin_ihs_svc_cd
                , case poc1ab.bin_ihs_svc_cd
                    when 0 then ihs0
                    when 1 then ihs1
                    when 2 then ihs2
                    when 3 then ihs3
                  end as "In-Home Service Desc"
                , poc1ab.cd_reporter_type
                , ref_rpt.tx_reporter_type as "Reporter Desc"
                , poc1ab.cd_access_type
                , ref_acc.tx_access_type as "Access type desc"
                , poc1ab.cd_allegation
                , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                , poc1ab.cd_finding
                , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                , ref_srv.tx_subctgry_poc_frc as "Service Type"
                , poc1ab.cd_budget_poc_frc as "Budget Cd"
                , ref_bud.tx_budget_poc_frc as "Budget"
                , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end  as   "Total In Care First Day"
                , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end as "Number of Entries"
                ,  case when ( --  first day + entered care < exited care
                    (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end)
                    +
                    (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end)) >= -- exited care
                        (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                            then 
                                case when (round(cnt_exits + 2 * sqrt(-2 
                                * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                then 1
                                else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                end
                            else cnt_exits
                        end)
                        
                    then -- use exits as they are
                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                            then 
                                case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                * cos(2*pi()*poc1ab.x2),0) ) <1
                                then 1
                                else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                end
                            else cnt_exits
                        end)
                    else -- use first day plus entered
                    (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end)
                    +
                    (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end)
                end as "Number of Exits"
            FROM cache_poc1ab_aggr poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,14)
            and poc1ab.int_all_param_key in (100000000000000000000,100000000000000010000,100000000000000020000,100000000000000030000,100000000000000040000)
            and poc1ab.cd_finding  in (select distinct cd_finding from tblfnd)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
         order by poc1ab.bin_dep_cd
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;  
elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)='0' 
   					and trim(p_filter_allegation)<>'0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) ='0'  )   then
    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=13;

           SELECT  
                poc1ab.qry_type   "qry_type_poc1"
                , poc1ab.date_type
                , poc1ab.start_date  as "Month"
                , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                , case poc1ab.age_grouping_cd
                    when 0 then age0
                    when 1 then age1
                    when 2 then age2
                    when 3 then age3
                    when 4 then age4
                  end as "Age Grouping"
                , poc1ab.pk_gndr  as "Gender_Cd"
                , case poc1ab.pk_gndr
                    when 0 then gdr0
                    when 1 then gdr1
                    when 2 then gdr2
                    when 3 then gdr3
                  end as "Gender" 
                , poc1ab.cd_race  as "Ethnicity_Cd"
                , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                , ref_fpl.placement as  "First Placement Setting"
                , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                , ref_lpl.placement as "Longest Placement Setting" 
                , poc1ab.county_cd as "Removal_County_Cd"
                , ref_cnty.county as "County"
                , poc1ab.bin_dep_cd as "Dependency_Cd"
                , case  poc1ab.bin_dep_cd 
                    when 0 then dep0
                    when 1 then dep1
                    when 2 then dep2
                    when 3 then dep3
                end as "Dependency"
                , poc1ab.bin_los_cd 
                , case poc1ab.bin_los_cd 
                    when 0 then los0
                    when 1 then los1
                    when 2 then los2
                    when 3 then los3
                    when 4 then los4 end as "Length of Service Desc"
                , poc1ab.bin_placement_cd
                , case poc1ab.bin_placement_cd
                    when 0 then plc0
                    when 1 then plc1
                    when 2 then plc2
                    when 3 then plc3
                    when 4 then plc4
                    when 5 then plc5
                  end as "Placement Count Desc"
                , poc1ab.bin_ihs_svc_cd
                , case poc1ab.bin_ihs_svc_cd
                    when 0 then ihs0
                    when 1 then ihs1
                    when 2 then ihs2
                    when 3 then ihs3
                  end as "In-Home Service Desc"
                , poc1ab.cd_reporter_type
                , ref_rpt.tx_reporter_type as "Reporter Desc"
                , poc1ab.cd_access_type
                , ref_acc.tx_access_type as "Access type desc"
                , poc1ab.cd_allegation
                , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                , poc1ab.cd_finding
                , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                , ref_srv.tx_subctgry_poc_frc as "Service Type"
                , poc1ab.cd_budget_poc_frc as "Budget Cd"
                , ref_bud.tx_budget_poc_frc as "Budget"
                , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end  as   "Total In Care First Day"
                , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end as "Number of Entries"
                ,  case when ( --  first day + entered care < exited care
                    (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end)
                    +
                    (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end)) >= -- exited care
                        (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                            then 
                                case when (round(cnt_exits + 2 * sqrt(-2 
                                * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                then 1
                                else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                end
                            else cnt_exits
                        end)
                        
                    then -- use exits as they are
                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                            then 
                                case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                * cos(2*pi()*poc1ab.x2),0) ) <1
                                then 1
                                else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                end
                            else cnt_exits
                        end)
                    else -- use first day plus entered
                    (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end)
                    +
                    (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end)
                end as "Number of Exits"
            FROM cache_poc1ab_aggr poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,13)
            and poc1ab.int_all_param_key in (100000000000000000000,100000000000000100000
,100000000000000200000,100000000000000300000,100000000000000400000)
            and poc1ab.cd_allegation in (select distinct cd_allegation from tblalg)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
         order by poc1ab.bin_dep_cd
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;                                       
elseif (trim(p_bin_placement_cd)='0' 
   					and trim(p_bin_ihs_svc_cd)='0' 
   					and trim(p_cd_reporter_type)='0' 
   					and trim(p_filter_access_type)<>'0' 
   					and trim(p_filter_allegation)='0' 
            and trim(p_filter_finding)='0' 
            and trim(p_bin_los_cd)='0'
            and trim(p_filter_service_budget) ='0' 
            and trim(p_filter_service_category)='0'
            and trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) ='0'  )   then
    call load_ooh_parameters(p_date
                ,  p_age_grouping_cd 
                ,  p_ethnicity_cd 
                ,  p_gender_cd 
                ,  p_init_cd_plcm_setng 
                ,  p_long_cd_plcm_setng 
                ,  p_county_cd 
                ,  p_bin_los_cd 
                ,  p_bin_placement_cd 
                ,  p_bin_ihs_svc_cd 
                ,  p_cd_reporter_type 
                ,  p_filter_access_type 
                ,  p_filter_allegation  
                , p_filter_finding 
                , p_filter_service_category  
                , p_filter_service_budget
                , 0
                , 0
                , p_mindate
                , p_maxdate
                , 19);
                
        update cache_poc1ab_params
        set cnt_qry=cnt_qry + 1,last_run_date=now()
        where qry_id=12;

           SELECT  
                poc1ab.qry_type   "qry_type_poc1"
                , poc1ab.date_type
                , poc1ab.start_date  as "Month"
                , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                , case poc1ab.age_grouping_cd
                    when 0 then age0
                    when 1 then age1
                    when 2 then age2
                    when 3 then age3
                    when 4 then age4
                  end as "Age Grouping"
                , poc1ab.pk_gndr  as "Gender_Cd"
                , case poc1ab.pk_gndr
                    when 0 then gdr0
                    when 1 then gdr1
                    when 2 then gdr2
                    when 3 then gdr3
                  end as "Gender" 
                , poc1ab.cd_race  as "Ethnicity_Cd"
                , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                , ref_fpl.placement as  "First Placement Setting"
                , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                , ref_lpl.placement as "Longest Placement Setting" 
                , poc1ab.county_cd as "Removal_County_Cd"
                , ref_cnty.county as "County"
                , poc1ab.bin_dep_cd as "Dependency_Cd"
                , case  poc1ab.bin_dep_cd 
                    when 0 then dep0
                    when 1 then dep1
                    when 2 then dep2
                    when 3 then dep3
                end as "Dependency"
                , poc1ab.bin_los_cd 
                , case poc1ab.bin_los_cd 
                    when 0 then los0
                    when 1 then los1
                    when 2 then los2
                    when 3 then los3
                    when 4 then los4 end as "Length of Service Desc"
                , poc1ab.bin_placement_cd
                , case poc1ab.bin_placement_cd
                    when 0 then plc0
                    when 1 then plc1
                    when 2 then plc2
                    when 3 then plc3
                    when 4 then plc4
                    when 5 then plc5
                  end as "Placement Count Desc"
                , poc1ab.bin_ihs_svc_cd
                , case poc1ab.bin_ihs_svc_cd
                    when 0 then ihs0
                    when 1 then ihs1
                    when 2 then ihs2
                    when 3 then ihs3
                  end as "In-Home Service Desc"
                , poc1ab.cd_reporter_type
                , ref_rpt.tx_reporter_type as "Reporter Desc"
                , poc1ab.cd_access_type
                , ref_acc.tx_access_type as "Access type desc"
                , poc1ab.cd_allegation
                , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                , poc1ab.cd_finding
                , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                , ref_srv.tx_subctgry_poc_frc as "Service Type"
                , poc1ab.cd_budget_poc_frc as "Budget Cd"
                , ref_bud.tx_budget_poc_frc as "Budget"
                , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end  as   "Total In Care First Day"
                , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end as "Number of Entries"
                ,  case when ( --  first day + entered care < exited care
                    (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end)
                    +
                    (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end)) >= -- exited care
                        (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                            then 
                                case when (round(cnt_exits + 2 * sqrt(-2 
                                * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                then 1
                                else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                end
                            else cnt_exits
                        end)
                        
                    then -- use exits as they are
                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                            then 
                                case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                * cos(2*pi()*poc1ab.x2),0) ) <1
                                then 1
                                else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                end
                            else cnt_exits
                        end)
                    else -- use first day plus entered
                    (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_start_date) 
                    end)
                    +
                    (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                        then 
                            case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                            * cos(2*pi()*poc1ab.x2),0) ) <1
                            then 1
                            else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                            end
                        else (cnt_entries) 
                    end)
                end as "Number of Exits"
            FROM cache_poc1ab_aggr poc1ab  
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
            where poc1ab.qry_id in (1,12)
            and poc1ab.int_all_param_key in  (100000000000000000000,100000000000001000000)
and poc1ab.cd_access_type in (select distinct cd_access_type from tblacc)
            and poc1ab.start_date 
            between p_mindate and p_maxdate
         order by poc1ab.bin_dep_cd
                , poc1ab.qry_type
                , poc1ab.date_type
                , poc1ab.start_date 
                , poc1ab.age_grouping_cd 
                , poc1ab.pk_gndr 
                , poc1ab.cd_race 
                , poc1ab.init_cd_plcm_setng 
                , poc1ab.long_cd_plcm_setng 
                , poc1ab.county_cd 
                , poc1ab.bin_los_cd 
                , poc1ab.bin_placement_cd
                , poc1ab.bin_ihs_svc_cd
                , poc1ab.cd_reporter_type
                , poc1ab.cd_access_type
                , poc1ab.cd_allegation
                , poc1ab.cd_finding
                , poc1ab.cd_subctgry_poc_frc 
                , poc1ab.cd_budget_poc_frc;                                      
ELSE -- NO ALL ZEROES
    call load_ooh_parameters(p_date
        ,  p_age_grouping_cd 
        ,  p_ethnicity_cd 
        ,  p_gender_cd 
        ,  p_init_cd_plcm_setng 
        ,  p_long_cd_plcm_setng 
        ,  p_county_cd 
        ,  p_bin_los_cd 
        ,  p_bin_placement_cd 
        ,  p_bin_ihs_svc_cd 
        ,  p_cd_reporter_type 
        ,  p_filter_access_type 
        ,  p_filter_allegation  
        , p_filter_finding 
        , p_filter_service_category  
        , p_filter_service_budget
        , 0
        , 1
        , p_mindate
        , p_maxdate
        , 19);
        
    
            select qry_id into p_qry_id
            from cache_poc1ab_params
            where age_grouping_cd=left(p_age_grouping_cd,20)
                and cd_race_census=left(p_ethnicity_cd,30) 
                and pk_gndr=left(p_gender_cd,10) 
                and init_cd_plcm_setng=left(p_init_cd_plcm_setng,50) 
                and long_cd_plcm_setng=left(p_long_cd_plcm_setng,50) 
                and county_cd=	left(p_County_Cd,200)   
                and bin_los_cd=left(p_bin_los_cd,30)
                and bin_placement_cd=left(p_bin_placement_cd,30)
                and bin_ihs_svc_cd=left(p_bin_ihs_svc_cd,30)
                and cd_reporter_type=left(p_cd_reporter_type,100)
                and filter_access_type=left(p_filter_access_type,30)
                and filter_allegation=left(p_filter_allegation,30)
                and filter_finding=left(p_filter_finding,30)
                and filter_srvc_type=left(p_filter_service_category,50)
                and filter_budget=left(p_filter_service_budget,50)
                and min_start_date<=p_mindate
                and max_start_date >=p_maxdate
           order by qry_ID  limit 1;
  
 
    start transaction;
					-- qry_id is still null
    if p_qry_id is  null  then
  
        INSERT INTO cache_poc1ab_params
                (qry_id
                , age_grouping_cd
                ,cd_race_census
                ,pk_gndr
                ,init_cd_plcm_setng
                ,long_cd_plcm_setng
                ,county_cd
                ,bin_los_cd
                ,bin_placement_cd
                ,bin_ihs_svc_cd
                ,cd_reporter_type
                ,filter_access_type
                ,filter_allegation
                ,filter_finding
                ,filter_srvc_type
                ,filter_budget
                ,min_start_date
                ,max_start_date
                ,cnt_qry
                ,last_run_date)

        select 
             (select @qry_ID:=(max(qry_ID) + 1)  from cache_poc1ab_params)
                ,p_age_grouping_cd
                ,p_ethnicity_cd
                ,p_gender_cd
                ,p_init_cd_plcm_setng
                ,p_long_cd_plcm_setng
                ,p_county_cd
                ,p_bin_los_cd
                ,p_bin_placement_cd
                ,p_bin_ihs_svc_cd
                ,p_cd_reporter_type
                ,p_filter_access_type
                ,p_filter_allegation
                ,p_filter_finding
                ,p_filter_service_category
                ,p_filter_service_budget
                ,p_minmonthstart
                ,p_maxmonthstart
                ,1
                ,now();
  
       else
            update cache_poc1ab_params
            set cnt_qry=cnt_qry + 1,last_run_date=now()
            where qry_id=p_qry_id;
       end if;
       
 drop temporary table if exists cachekeys ;
  create temporary table cachekeys 
  (int_hash_key decimal(22,0)
  ,int_param_key bigint
  ,bin_los_cd int
  ,bin_placement_cd int
  ,bin_ihs_svc_cd int
  ,cd_reporter_type int
  ,cd_access_type int
  ,cd_allegation int
  ,cd_finding int
  ,cd_subctgry_poc_frc int
  ,cd_budget_poc_frc int
  ,in_cache int
  ,qry_id int) engine=memory;
  insert into cachekeys
  select	cast((int_param_key * power(10.0,12) ) as decimal(22,0)) + 
                    cast((bin_los_cd * power(10.0,11) )as decimal(22,0)) + 
                    cast((bin_placement_cd * power(10.0,10) )as decimal(22,0)) + 
                   cast( (bin_ihs_svc_cd * power(10.0,9) ) as decimal(22,0)) + 
                    cast((cd_reporter_type * power(10.0,7) ) as decimal(22,0)) + 
                   cast( (cd_access_type * power(10.0,6)) as decimal(22,0)) + 
                   cast( (cd_allegation * power(10.0,5)) as decimal(22,0)) + 
                   cast( (cd_finding * power(10.0,4)) as decimal(22,0)) + 
                    cast((cd_subctgry_poc_frc * power(10,2)) + cd_budget_poc_frc as decimal(22,0)) as  int_hash_key
                     ,int_param_key
                     ,bin_los_cd
                     ,bin_placement_cd
                     ,bin_ihs_svc_cd
                     ,cd_reporter_type
                     ,cd_access_type
                     ,cd_allegation
                     ,cd_finding
                     ,cd_subctgry_poc_frc
                     ,cd_budget_poc_frc
                     ,0 as in_cache
                    ,coalesce(p_qry_id,@qry_ID) as qry_id
				from (select distinct int_param_key from tblprmlocdem) prm
				cross join (select distinct bin_los_cd from tbllos) los
				cross join (select distinct bin_placement_cd from tblnbrplc) plc
				cross join (select distinct bin_ihs_svc_cd from tblihs) ihs
				cross join (select distinct cd_reporter_type from tblrpt) rpt
				cross join (select distinct cd_access_type from tblacc) acc
				cross join (select distinct cd_allegation from tblalg) alg
				cross join (select distinct cd_finding from tblfnd) fnd
				cross join (select distinct cd_subctgry_poc_frc from tblsrvc) srvc
				cross join (select distinct cd_budget_poc_frc from tblbudg) budg;
   
alter table cachekeys add index idx_int_hash_key(int_hash_key,in_cache);
alter table cachekeys add index idx_qryid_params(qry_id,int_hash_key);
alter table cachekeys 
add index idx_params(int_param_key
,bin_los_cd,bin_placement_cd,bin_ihs_svc_cd,cd_reporter_type
,cd_access_type,cd_allegation	,cd_finding
,cd_budget_poc_frc
,cd_subctgry_poc_frc
,in_cache);   

update cachekeys,cache_qry_param_poc1ab
        set cachekeys.in_cache=1,cachekeys.qry_id=cache_qry_param_poc1ab.qry_id
        where cachekeys.int_hash_key=cache_qry_param_poc1ab.int_hash_key;    
        
      select sum(in_cache),count(*) ,count(distinct qry_id)
            into var_row_cnt_cache,var_row_cnt_param ,var_match_unq_qry_id
    from cachekeys;
    
                   
if  var_row_cnt_param <> var_row_cnt_cache then
       set @incl='insert IGNORE into cache_poc1ab_aggr
			   ( qry_type
                ,date_type
                ,start_date
                ,int_param_key
                ,bin_dep_cd
                ,bin_los_cd
                ,bin_placement_cd
                ,bin_ihs_svc_cd
                ,cd_reporter_type
                ,cd_access_type
                ,cd_allegation
                ,cd_finding
                ,cd_subctgry_poc_frc
                ,cd_budget_poc_frc
                ,age_grouping_cd
                ,cd_race
                ,pk_gndr
                ,init_cd_plcm_setng
                ,long_cd_plcm_setng
                ,county_cd
                ,cnt_start_date
                ,cnt_entries
                ,cnt_exits
                ,min_start_date
                ,max_start_date
                ,x1
                ,x2
                ,insert_date
                ,qry_id
                ,start_year
                ,int_all_param_key)

            SELECT    
              prtl_poc1ab.qry_type
  					, prtl_poc1ab.date_type 
  					, prtl_poc1ab.start_date';
		if NOT(trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) = '0'  )  then
			set @incl=concat(@incl,char(13),'
            , mtch.int_param_key');
		else
			set @incl=concat(@incl,char(13),'
            , 100000000');
		end if;
			set @incl=concat(@incl,char(13),'
  					, bin_dep_cd');
       if trim(p_bin_los_cd)='0' then
        set @incl=concat(@incl,char(13),', 0 as bin_los_cd');
        else
        set @incl=concat(@incl,char(13),', los.bin_los_cd');
        end if;
          if trim(p_bin_placement_cd)='0' then
        set @incl=concat(@incl,char(13),', 0 as bin_placement_cd');
        else
        set @incl=concat(@incl,char(13),', plc.bin_placement_cd');
        end if;   
        if trim(p_bin_ihs_svc_cd)='0' then
        set @incl=concat(@incl,char(13),', 0 as bin_ihs_svc_cd');
        else
        set @incl=concat(@incl,char(13),', ihs.bin_ihs_svc_cd');
        end if;
        if trim(p_cd_reporter_type)='0' then
        set @incl=concat(@incl,char(13),', 0 as cd_reporter_type');
        else
        set @incl=concat(@incl,char(13),', rpt.cd_reporter_type');
        end if;					
        if trim(p_filter_access_type)='0' then
        set @incl=concat(@incl,char(13),', 0 as cd_access_type');
        else
        set @incl=concat(@incl,char(13),', acc.cd_access_type');
        end if;					

        if trim(p_filter_allegation)= '0' then
        set @incl=concat(@incl,char(13),', 0 as cd_allegation');
        else
        set @incl=concat(@incl,char(13),', alg.cd_allegation');
        end if;	       
        if trim(p_filter_finding)='0' then
        set @incl=concat(@incl,char(13),', 0 as cd_finding');
        else
        set @incl=concat(@incl,char(13),', fnd.cd_finding');
        end if;	        
        if trim(p_filter_service_category) = '0'  then
        set @incl=concat(@incl,', 0 as cd_subctgry_poc_frc');
        else
        set @incl=concat(@incl,', srv.cd_subctgry_poc_frc');
        end if;	        
        if trim(p_filter_service_budget) ='0' then
        set @incl=concat(@incl,', 0 as cd_budget_poc_frc');
        else
        set @incl=concat(@incl,', bud.cd_budget_poc_frc ');
        end if;
  		if NOT(trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) = '0'  )  then
			set @incl=concat(@incl,char(13),'
  					, mtch.age_grouping_cd 
  					, mtch.cd_race_census
  					, mtch.pk_gndr
  					, mtch.init_cd_plcm_setng
  					, mtch.long_cd_plcm_setng
  					, mtch.county_cd');
		else
			set @incl=concat(@incl,char(13),'
					,0
					,0
					,0
					,0
					,0
					,0');
		end if;
		set @incl=concat(@incl,char(13),'
  					, coalesce(sum(prtl_poc1ab.cnt_start_date),0) as cnt_start_date
  					, coalesce(sum(prtl_poc1ab.cnt_entries),0) as cnt_entries
  					, coalesce(sum(prtl_poc1ab.cnt_exits),0) as cnt_exits');
		set @incl=concat(@incl,char(13),', DATE',char(39), p_minmonthstart,char(39));
		set @incl=concat(@incl,char(13),', DATE',char(39), p_maxmonthstart,char(39));
		set @incl=concat(@incl,char(13),', ',char(39), x1,char(39));
		set @incl=concat(@incl,char(13),', ',char(39), x2,char(39));    
		set @incl=concat(@incl,char(13),', DATE',char(39), now() ,char(39),' as insert_date'); 
		set @incl=concat(@incl,char(13),', ',char(39), @qry_id,char(39),char(13),'
            , prtl_poc1ab.start_year');
		if NOT(trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) = '0'  )  then
			set @incl=concat(@incl,'
            ,cast((mtch.int_param_key * power(10.0,12) ) as decimal(22,0))');
		else
			set @incl=concat(@incl,'
            ,cast((100000000 * power(10.0,12) ) as decimal(22,0))');
		end if;
		if trim(p_bin_los_cd)<>'0' then
			set @incl=concat(@incl,' 
            + cast((los.bin_los_cd * power(10.0,11) )as decimal(22,0)) ');
        end if;
        if trim(p_bin_placement_cd)<>'0' then
		    set @incl=concat(@incl,' 
            + cast((plc.bin_placement_cd * power(10.0,10) )as decimal(22,0))');
        end if;   
        if trim(p_bin_ihs_svc_cd)<>'0' then
	        set @incl=concat(@incl,' 
            + cast( (ihs.bin_ihs_svc_cd * power(10.0,9) ) as decimal(22,0))');
        end if;
        if trim(p_cd_reporter_type)<>'0' then
	        set @incl=concat(@incl,'
            + cast((rpt.cd_reporter_type * power(10.0,7) ) as decimal(22,0)) ');
        end if;					
        if trim(p_filter_access_type)<>'0' then
	        set @incl=concat(@incl,' 
            + cast((acc.cd_access_type * power(10.0,6)) as decimal(22,0))');
        end if;					

        if trim(p_filter_allegation) <> '0' then
	        set @incl=concat(@incl,' 
            + cast( (alg.cd_allegation * power(10.0,5)) as decimal(22,0))');
        end if;	       
        if trim(p_filter_finding) <> '0' then
	        set @incl=concat(@incl,'
            + cast( (fnd.cd_finding * power(10.0,4)) as decimal(22,0))');
        end if;	        
        if trim(p_filter_service_category) <> '0' then
	        set @incl=concat(@incl,'
            + cast((srv.cd_subctgry_poc_frc * power(10,2)) as decimal(22,0))');
        end if;	        
        if trim(p_filter_service_budget) <> '0' then
	        set @incl=concat(@incl,'
            +  bud.cd_budget_poc_frc ');
        end if;	
		set @incl=concat(@incl,char(13),'
  			FROM prtl_poc1ab_ram prtl_poc1ab  ');
		if NOT(trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) = '0'  )  then
			set @incl=concat(@incl,char(13),
			'join tblprmlocdem mtch 
            on mtch.int_match_param_key=prtl_poc1ab.int_match_param_key 
            and mtch.cd_race_census in (select cd_race from tbleth)');
		end if;
		if trim(p_bin_los_cd)<>'0' then
			set @incl=concat(@incl,char(13),'
			join tbllos los on los.match_code=prtl_poc1ab.max_bin_los_cd');
        end if;
        if trim(p_bin_placement_cd)<>'0' then
		    set @incl=concat(@incl,char(13),'
			join tblnbrplc plc on plc.match_code=prtl_poc1ab.bin_placement_cd');
        end if;   
        if trim(p_bin_ihs_svc_cd)<>'0' then
	        set @incl=concat(@incl,char(13),'
			join tblihs ihs on ihs.match_code=prtl_poc1ab.bin_ihs_svc_cd');
        end if;
        if trim(p_cd_reporter_type)<>'0' then
	        set @incl=concat(@incl,char(13),'
			join tblrpt rpt on rpt.match_code=prtl_poc1ab.cd_reporter_type');
        end if;					
        if trim(p_filter_access_type)<>'0' then
	        set @incl=concat(@incl,char(13),'
			join tblacc acc on acc.match_code=prtl_poc1ab.filter_access_type');
        end if;					

        if trim(p_filter_allegation) <> '0' then
	        set @incl=concat(@incl,char(13),'
			join tblalg alg on alg.match_code=prtl_poc1ab.filter_allegation');
        end if;	       
        if trim(p_filter_finding) <> '0' then
	        set @incl=concat(@incl,char(13),'
			join tblfnd fnd on fnd.match_code=prtl_poc1ab.filter_finding');
        end if;	        
        if trim(p_filter_service_category) <> '0' then
	        set @incl=concat(@incl,char(13),'
			join tblsrvc srv on srv.match_code=prtl_poc1ab.filter_service_category');
        end if;	        
        if trim(p_filter_service_budget) <> '0' then
	        set @incl=concat(@incl,char(13),'
			join tblbudg bud on bud.match_code=prtl_poc1ab.filter_service_budget ');
        end if;	
		set @incl=concat(@incl,char(13),'where prtl_poc1ab.start_date 
        between DATE ',char(39),p_minmonthstart,char(39),' and DATE ',char(39),p_maxmonthstart,char(39));
		set @incl=concat(@incl,char(13),'
         			group by  prtl_poc1ab.qry_type
  					, prtl_poc1ab.date_type 
  					, prtl_poc1ab.start_date
					, prtl_poc1ab.bin_dep_cd');
if NOT(trim(p_age_grouping_cd) ='0' 
            and trim(p_gender_cd) ='0'
            and trim(p_ethnicity_cd)='0'
            and trim(p_init_cd_plcm_setng)='0' 
            and trim(p_long_cd_plcm_setng)='0' 
            and trim(p_county_cd) = '0'  )  then
			set @incl=concat(@incl,char(13),'
					, mtch.int_param_key
  					, mtch.age_grouping_cd 
  					, mtch.pk_gndr
  					, mtch.cd_race_census
  					, mtch.init_cd_plcm_setng
  					, mtch.long_cd_plcm_setng
  					, mtch.county_cd
  	');
		end if;
		if trim(p_bin_los_cd)<>'0' then
			set @incl=concat(@incl,'
				,los.bin_los_cd');
        end if;
        if trim(p_bin_placement_cd)<>'0' then
		    set @incl=concat(@incl,char(13),'
			, plc.bin_placement_cd');
        end if;   
        if trim(p_bin_ihs_svc_cd)<>'0' then
	        set @incl=concat(@incl,char(13),'
			, ihs.bin_ihs_svc_cd');
        end if;
        if trim(p_cd_reporter_type)<>'0' then
	        set @incl=concat(@incl,char(13),'
			, rpt.cd_reporter_type');
        end if;					
        if trim(p_filter_access_type)<>'0' then
	        set @incl=concat(@incl,char(13),'
			, acc.cd_access_type');
        end if;					

        if trim(p_filter_allegation) <> '0' then
	        set @incl=concat(@incl,char(13),'
			, alg.cd_allegation');
        end if;	       
        if trim(p_filter_finding) <> '0' then
	        set @incl=concat(@incl,char(13),'
			, fnd.cd_finding');
        end if;	        
        if trim(p_filter_service_category) <> '0' then
	        set @incl=concat(@incl,char(13),'
			, srv.cd_subctgry_poc_frc');
        end if;	        
        if trim(p_filter_service_budget) <> '0' then
	        set @incl=concat(@incl,char(13),'
			, bud.cd_budget_poc_frc ');
        end if;	
        set @incl=concat(@incl,';',char(13));
        
  --      select @incl;
        PREPARE stmt FROM @incl;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;
        INSERT IGNORE INTO cache_qry_param_poc1ab
								   (int_param_key
								   ,bin_los_cd
								   ,bin_placement_cd
								   ,bin_ihs_svc_cd
								   ,cd_reporter_type
								   ,cd_access_type
								   ,cd_allegation
								   ,cd_finding
								   ,cd_subctgry_poc_frc
								   ,cd_budget_poc_frc
								   ,age_grouping_cd
								   ,cd_race
								   ,pk_gndr
								   ,init_cd_plcm_setng
								   ,long_cd_plcm_setng
								   ,county_cd
								   ,qry_id
								   ,int_hash_key)
						select ck.int_param_key
								   ,bin_los_cd
								   ,bin_placement_cd
								   ,bin_ihs_svc_cd
								   ,cd_reporter_type
								   ,cd_access_type
								   ,cd_allegation
								   ,cd_finding
								   ,cd_subctgry_poc_frc
								   ,cd_budget_poc_frc
								   ,age_grouping_cd
								   ,cd_race_census
								   ,pk_gndr
								   ,init_cd_plcm_setng
								   ,long_cd_plcm_setng
								   ,county_cd
								   ,@qry_id
								   ,int_hash_key
						from cachekeys ck
						join (select distinct int_param_key,age_grouping_cd,cd_race_census,pk_gndr,init_cd_plcm_setng,long_cd_plcm_setng,county_cd from tblprmlocdem)  q on q.int_param_key=ck.int_param_key
						where ck.in_cache=0;        
        
end if; -- not all rows exist in cache
       
           select            
                            poc1ab.qry_type   "qry_type_poc1"
                            , poc1ab.date_type
                            , poc1ab.start_date  as "Month"
                            , poc1ab.age_grouping_cd as  "Age_Grouping_Cd"
                            , case poc1ab.age_grouping_cd
                                when 0 then age0
                                when 1 then age1
                                when 2 then age2
                                when 3 then age3
                                when 4 then age4
                              end as "Age Grouping"
                            , poc1ab.pk_gndr  as "Gender_Cd"
                            , case poc1ab.pk_gndr
                                when 0 then gdr0
                                when 1 then gdr1
                                when 2 then gdr2
                                when 3 then gdr3
                              end as "Gender" 
                            , poc1ab.cd_race  as "Ethnicity_Cd"
                            , case poc1ab.cd_race  when 0   then eth0  when 1   then eth1  when 2   then eth2  when 3   then eth3  when 4   then eth4  when 5   then eth5  when 6   then eth6  when 7   then eth7  when 8   then eth8  when 9   then eth9  when 10  then eth10 when 11  then eth11 when 12  then eth12 end as "Race/Ethnicity" 
                            , poc1ab.init_cd_plcm_setng as "InitPlacementCd"
                            , ref_fpl.placement as  "First Placement Setting"
                            , poc1ab.long_cd_plcm_setng as "LongPlacementCd"
                            , ref_lpl.placement as "Longest Placement Setting" 
                            , poc1ab.county_cd as "Removal_County_Cd"
                            , ref_cnty.county as "County"
                            , poc1ab.bin_dep_cd as "Dependency_Cd"
                            , case  poc1ab.bin_dep_cd 
                                when 0 then dep0
                                when 1 then dep1
                                when 2 then dep2
                                when 3 then dep3
                            end as "Dependency"
                            , poc1ab.bin_los_cd 
                            , case poc1ab.bin_los_cd 
                                when 0 then los0
                                when 1 then los1
                                when 2 then los2
                                when 3 then los3
                                when 4 then los4 end as "Length of Service Desc"
                            , poc1ab.bin_placement_cd
                            , case poc1ab.bin_placement_cd
                                when 0 then plc0
                                when 1 then plc1
                                when 2 then plc2
                                when 3 then plc3
                                when 4 then plc4
                                when 5 then plc5
                              end as "Placement Count Desc"
                            , poc1ab.bin_ihs_svc_cd
                            , case poc1ab.bin_ihs_svc_cd
                                when 0 then ihs0
                                when 1 then ihs1
                                when 2 then ihs2
                                when 3 then ihs3
                              end as "In-Home Service Desc"
                            , poc1ab.cd_reporter_type
                            , ref_rpt.tx_reporter_type as "Reporter Desc"
                            , poc1ab.cd_access_type
                            , ref_acc.tx_access_type as "Access type desc"
                            , poc1ab.cd_allegation
                            , case poc1ab.cd_allegation  when 0  then alg0 when 1  then alg1 when 2  then alg2 when 3  then alg3 when 4  then alg4 end as "Allegation"
                            , poc1ab.cd_finding
                            , case poc1ab.cd_finding  when 0  then fnd0 when 1  then fnd1 when 2  then fnd2 when 3  then fnd3 when 4  then fnd4 end as "Finding"
                            , poc1ab.cd_subctgry_poc_frc as "Service Type Cd"
                            , ref_srv.tx_subctgry_poc_frc as "Service Type"
                            , poc1ab.cd_budget_poc_frc as "Budget Cd"
                            , ref_bud.tx_budget_poc_frc as "Budget"
                             , case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end  as   "Total In Care First Day"
                            , case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end as "Number of Entries"
                            ,  case when ( --  first day + entered care < exited care
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1))
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)) >= -- exited care
                                    (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 
                                            * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                    
                                then -- use exits as they are
                                (case when (cnt_exits) > 0 /* jitter all above 0 */ 
                                        then 
                                            case when (round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                            * cos(2*pi()*poc1ab.x2),0) ) <1
                                            then 1
                                            else round(cnt_exits + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                            end
                                        else cnt_exits
                                    end)
                                else -- use first day plus entered
                                (case when (cnt_start_date) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_start_date + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_start_date) 
                                end)
                                +
                                (case when (cnt_entries) > 0 /* jitter all above 0 */ 
                                    then 
                                        case when (round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) 
                                        * cos(2*pi()*poc1ab.x2),0) ) <1
                                        then 1
                                        else round(cnt_entries + 2 * sqrt(-2 * log(poc1ab.x1)) * cos(2*pi()*poc1ab.x2),0)
                                        end
                                    else (cnt_entries) 
                                end)
                            end as "Number of Exits"
from cache_poc1ab_aggr poc1ab
join cachekeys ck on ck.qry_id=poc1ab.qry_id
and ck.int_hash_key=poc1ab.int_all_param_key
            join ref_lookup_placement ref_fpl on ref_fpl.placement_cd=poc1ab.init_cd_plcm_setng
            join ref_lookup_placement ref_lpl on ref_lpl.placement_cd=poc1ab.long_cd_plcm_setng
            join ref_lookup_county ref_cnty on ref_cnty.county_cd=poc1ab.county_cd
             join ref_filter_reporter_type ref_rpt on ref_rpt.cd_reporter_type=poc1ab.cd_reporter_type
            join ref_filter_access_type ref_acc on ref_acc.cd_access_type=poc1ab.cd_access_type
            join ref_service_cd_subctgry_poc ref_srv on ref_srv.cd_subctgry_poc_frc=poc1ab.cd_subctgry_poc_frc
            join ref_service_cd_budget_poc_frc ref_bud on ref_bud.cd_budget_poc_frc=poc1ab.cd_budget_poc_frc
      order by  poc1ab.bin_dep_cd 
                            ,poc1ab.qry_type
                            , poc1ab.date_type
                            , poc1ab.start_date 
                            , poc1ab.age_grouping_cd 
                            , poc1ab.pk_gndr 
                            , poc1ab.cd_race 
                            , poc1ab.init_cd_plcm_setng 
                            , poc1ab.long_cd_plcm_setng 
                            , poc1ab.county_cd 
                            , poc1ab.bin_los_cd 
                            , poc1ab.bin_placement_cd
                            , poc1ab.bin_ihs_svc_cd
                            , poc1ab.cd_reporter_type
                            , poc1ab.cd_access_type
                            , poc1ab.cd_allegation
                            , poc1ab.cd_finding
                            , poc1ab.cd_subctgry_poc_frc 
                            , poc1ab.cd_budget_poc_frc;  
     end if; -- end all NOT ZEROES
 end if;--  end strored procedure on
end
